!obj:pylearn2.train.Train {
    dataset: &train !obj:datasets.faceDataset.faceDataset {
        which_set: 'train',
        ratio: 0.9,
        positive_samples: "/data/lisatmp3/ballasn/facedet/datasets/aflw/feats16.npy",
        negative_samples: "/data/lisatmp3/ballasn/facedet/datasets/pascal/neg100000_16.npy",
        resize_neg: True,
    },
    model: !obj:pylearn2.models.mlp.MLP {
         batch_size: 128,
         layers: [
           !obj:models.layer.convVariable.ConvElemwise {
               layer_name: 'c0',
               output_channels: 128,
               kernel_shape: [2, 2],
               irange: .02,
               max_kernel_norm: 7.9,
               nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
            },
            !obj:models.layer.convVariable.ConvElemwise {
               layer_name: 'c1',
               output_channels: 512,
               kernel_shape: [2, 2],
               irange: .05,
               max_kernel_norm: 7.9,
               nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
           },
           !obj:models.layer.convVariable.ConvElemwise {
               layer_name: 'c2',
               output_channels: 512,
               kernel_shape: [2, 2],
               irange: .05,
               max_kernel_norm: 7.9,
               nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
          },
         !obj:models.layer.convVariable.ConvElemwise {
            layer_name: 'Sw',
            output_channels: 2,
            kernel_shape: [13, 13],
            irange: .5,
            max_kernel_norm: 7.9,
            nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
          },
          !obj:models.layer.SoftmaxBC01Extended.SoftmaxExtended {
              max_col_norm: 1.9365,
              layer_name: 'y',
              n_classes: 2,
              irange: .5,
              thresholds: [0.25, 0.4]
          }
          ],
          input_space: !obj:pylearn2.space.Conv2DSpace {
              shape: [16, 16],
              num_channels: 3,
              axes: ['c', 0, 1, 'b'],
          },
      },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: .01,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum        {
            init_momentum: 0.01,
        },
        train_iteration_mode: 'batchwise_shuffled_sequential',
        monitor_iteration_mode: 'even_sequential',
        monitoring_dataset:
            {
             #   'train' : *train,
                'valid' : !obj:datasets.faceDataset.faceDataset {
                        which_set: 'valid',
                        ratio: 0.9,
                        positive_samples: "/data/lisatmp3/ballasn/facedet/datasets/aflw/feats16.npy",
                        negative_samples: "/data/lisatmp3/ballasn/facedet/datasets/pascal/neg100000_16.npy",
                      },
            },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 1000,
            new_epochs: True
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
                channel_name: 'valid_y_misclass',
                save_path: "./models/testComposite_best.pkl"
            }
    ],
    save_path: "./models/testComposite.pkl",
    save_freq: 5
}
