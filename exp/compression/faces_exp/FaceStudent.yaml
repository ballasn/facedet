!obj:pylearn2.train.Train {
    dataset: &train !obj:datasets.faceDataset.faceDataset {
        which_set: 'train',
        positive_samples: "/data/lisatmp3/chassang/facedet/16/pos16_100_eq.npy",
        negative_samples: "/data/lisatmp3/chassang/facedet/16/neg16_100_eq.npy",
        axes: ['c', 0, 1, 'b']
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 128,
                layers: [
                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c0',
                     output_channels: 16,
                     kernel_shape: [3, 3],
                     irange: .05,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c1',
                     output_channels: 32,
                     kernel_shape: [3, 3],
                     irange: .1,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c2',
                     output_channels: 32,
                     kernel_shape: [3, 3],
                     irange: .1,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c3',
                     output_channels: 32,
                     kernel_shape: [3, 3],
                     irange: .1,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c4',
                     output_channels: 32,
                     kernel_shape: [2, 2],
                     irange: .1,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },

                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c5',
                     output_channels: 32,
                     kernel_shape: [2, 2],
                     irange: .1,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c6',
                     output_channels: 32,
                     kernel_shape: [2, 2],
                     irange: .1,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c7',
                     output_channels: 16,
                     kernel_shape: [2, 2],
                     irange: .05,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c8',
                     output_channels: 8,
                     kernel_shape: [2, 2],
                     irange: .05,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:utils.layer.convVariable.ConvElemwise {
                     layer_name: 'c9',
                     output_channels: 2,
                     kernel_shape: [3, 3],
                     irange: .05,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:utils.layer.SoftmaxBC01Extended.SoftmaxExtended {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 2,
                     irange: .1,
                     thresholds: []
                 }
                ],
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [16, 16],
            num_channels: 3,
            axes: ['c', 0, 1, 'b'],
        },
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: .01,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: 0.1,
        },
        train_iteration_mode: 'batchwise_shuffled_sequential',
        monitor_iteration_mode: 'even_sequential',
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:datasets.faceDataset.faceDataset {
                        which_set: 'valid',
                        positive_samples: "/data/lisatmp3/chassang/facedet/16/pos16_100_eq.npy",
                        negative_samples: "/data/lisatmp3/chassang/facedet/16/neg16_100_eq.npy",
                        axes: ['c', 0, 1, 'b'],
                      },
            },
        cost: !obj:pylearn2.costs.cost.SumOfCosts { costs: [
            !obj:utils.compression.TeacherRegressionCostFace.TeacherRegressionCost {
                teacher_path: /data/lisatmp3/chassang/facedet/models/16/5conv16_best.pkl,
                relaxation_term: 3,
                weight: 0.1
            }
            ]
        },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 1000,
            new_epochs: True
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
                channel_name: 'valid_y_misclass',
                save_path: "./models/student_5conv16_best.pkl"
            }
    ],
    save_path: "./models/student_5conv16.pkl",
    save_freq: 5
}
