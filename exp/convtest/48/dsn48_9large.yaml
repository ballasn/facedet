!obj:pylearn2.train.Train {
    dataset: &train !obj:datasets.faceDataset_hdf5.faceDataset {
                which_set: 'train',
                positive_samples: "/data/lisatmp3/chassang/facedet/48/pos48_norsz.hdf",
                negative_samples: "/data/lisatmp3/chassang/facedet/48/imagenet48_700.hdf",
                ratio: 0.9
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 128,
                layers: [
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'c0',
                     output_channels: 128,
                     kernel_shape: [5, 5],
                     irange: .005,
                     max_kernel_norm: 0.7,
                     pool_type: 'max',
                     pool_shape: [2,2],
                     pool_stride: [2,2],
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'n0',
                     output_channels: 64,
                     kernel_shape: [1, 1],
                     irange: .5,
                     max_kernel_norm: 7.9,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'c1',
                     output_channels: 256,
                     kernel_shape: [3, 3],
                     irange: .05,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'n1',
                     output_channels: 128,
                     kernel_shape: [1, 1],
                     irange: .5,
                     max_kernel_norm: 7.9,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'c2',
                     output_channels: 256,
                     kernel_shape: [3, 3],
                     irange: .05,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'n2',
                     output_channels: 128,
                     kernel_shape: [1, 1],
                     irange: .5,
                     max_kernel_norm: 7.9,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'c3',
                     output_channels: 256,
                     kernel_shape: [3, 3],
                     irange: .05,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'n3',
                     output_channels: 128,
                     kernel_shape: [1, 1],
                     irange: .5,
                     max_kernel_norm: 7.9,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'c4',
                     output_channels: 256,
                     kernel_shape: [3, 3],
                     irange: .05,
                     pool_type: 'max',
                     pool_shape: [2,2],
                     pool_stride: [2,2],
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'n4',
                     output_channels: 128,
                     kernel_shape: [1, 1],
                     irange: .5,
                     max_kernel_norm: 7.9,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'c5',
                     output_channels: 512,
                     kernel_shape: [2, 2],
                     irange: .05,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'n5',
                     output_channels: 256,
                     kernel_shape: [1, 1],
                     irange: .5,
                     max_kernel_norm: 0.7,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'c6',
                     output_channels: 512,
                     kernel_shape: [2,2],
                     irange: .05,
                     max_kernel_norm: 7.9,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1,

                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'n6',
                     output_channels: 256,
                     kernel_shape: [1, 1],
                     irange: .5,
                     max_kernel_norm: 0.7,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'c7',
                     output_channels: 512,
                     kernel_shape: [2,2],
                     irange: .05,
                     max_kernel_norm: 7.9,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1,

                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'n7',
                     output_channels: 256,
                     kernel_shape: [1, 1],
                     irange: .5,
                     max_kernel_norm: 0.7,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'c8',
                     output_channels: 1024,
                     kernel_shape: [3,3],
                     irange: .05,
                     max_kernel_norm: 7.9,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1,
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'n8',
                     output_channels: 512,
                     kernel_shape: [1, 1],
                     irange: .5,
                     max_kernel_norm: 0.7,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1,
                 },
                 !obj:models.layer.convVariable.ConvElemwise {
                     layer_name: 'out',
                     output_channels: 2,
                     kernel_shape: [2,2],
                     irange: .05,
                     max_kernel_norm: 7.9,
                     nonlinearity: !obj:pylearn2.models.mlp.RectifierConvNonlinearity {},
                     tied_b: 1,
                 },
                 !obj:models.layer.SigmoidBC01Extended.SigmoidExtended {
                     layer_name: 'y',
                     n_classes: 2,
                 }
                 
                ],
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [48, 48],
            num_channels: 3,
            axes: ['b', 'c', 0, 1],
        },
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: .0005,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: 0.1,
        },
        train_iteration_mode: 'batchwise_shuffled_sequential',
        monitor_iteration_mode: 'even_sequential',
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:datasets.faceDataset_hdf5.faceDataset {
                        which_set: 'valid',
                positive_samples: "/data/lisatmp3/chassang/facedet/48/pos48_norsz.hdf",
                negative_samples: "/data/lisatmp3/chassang/facedet/48/imagenet48_700.hdf",
                        ratio: 0.9
                      },
                'aflw' : !obj:datasets.faceDataset.faceDataset {
                        which_set: 'valid',
                        positive_samples: "/data/lisatmp3/ballasn/facedet/datasets/aflw/feats48.npy",
                        negative_samples: "/data/lisatmp3/ballasn/facedet/datasets/pascal/neg100000_48.npy",
                        resize_neg: True,
                     }
            },
        cost: !obj:costs.mlp.dsn.DSN_dropout {
            companion: {
                        'n0': !obj:pylearn2.models.mlp.Softmax {
                                              max_col_norm: 1.9365,
                                              layer_name: 'nin0y',
                                              n_classes: 2,
#                                              C: 0.01,
                                              irange: .005 },
                        'n1': !obj:pylearn2.models.mlp.Softmax {
                                              max_col_norm: 1.9365,
                                              layer_name: 'nin1y',
                                              n_classes: 2,
 #                                             C: 0.01,
                                              irange: .005 },
                        'n2': !obj:pylearn2.models.mlp.Softmax {
                                              max_col_norm: 1.9365,
                                              layer_name: 'nin2y',
                                              n_classes: 2,
#                                              C: 0.01,
                                              irange: .005 },
                        'n3': !obj:pylearn2.models.mlp.Softmax {
                                              max_col_norm: 1.9365,
                                              layer_name: 'nin3y',
                                              n_classes: 2,
 #                                             C: 0.01,
                                              irange: .005 },
                        'n4': !obj:pylearn2.models.mlp.Softmax {
                                              max_col_norm: 1.9365,
                                              layer_name: 'nin4y',
                                              n_classes: 2,
 #                                             C: 0.01,
                                              irange: .005 },
                        'n5': !obj:pylearn2.models.mlp.Softmax {
                                              max_col_norm: 1.9365,
                                              layer_name: 'nin4y',
                                              n_classes: 2,
 #                                             C: 0.01,
                                              irange: .005 },
                        'n6': !obj:pylearn2.models.mlp.Softmax {
                                              max_col_norm: 1.9365,
                                              layer_name: 'nin4y',
                                              n_classes: 2,
 #                                             C: 0.01,
                                              irange: .005 },
                        'n7': !obj:pylearn2.models.mlp.Softmax {
                                              max_col_norm: 1.9365,
                                              layer_name: 'nin4y',
                                              n_classes: 2,
 #                                             C: 0.01,
                                              irange: .005 },
                        'n8': !obj:pylearn2.models.mlp.Softmax {
                                              max_col_norm: 1.9365,
                                              layer_name: 'nin4y',
                                              n_classes: 2,
 #                                             C: 0.01,
                                              irange: .005 },
                       },
            companion_weight: {'n0': 0.3, 'n1': 0.3,
                               'n2': 0.3, 'n3': 0.3,
                               'n4': 0.3, 'n5': 0.3,
                               'n6': 0.3, 'n7': 0.3,
                               'n8': 0.3},
            default_input_include_prob: 1.0,
            default_input_scale: 1.0,
            input_include_probs:{'c8': 0.5},
         },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 1000,
            new_epochs: True
        },
    },
    extensions: [
         !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {
              start: 5,
              saturate: 60,
              decay_factor: 0.01
        },
        !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 5,
            saturate: 250,
            final_momentum: .9
        },
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
                channel_name: 'aflw_y_misclass',
                save_path: "models/${PYLEARN2_TRAIN_FILE_STEM}_best.pkl"
            }
    ],
    save_path: "models/${PYLEARN2_TRAIN_FILE_STEM}.pkl",
    save_freq: 5
}
